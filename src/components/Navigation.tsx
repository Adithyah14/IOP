import { useNavigate, useLocation } from "react-router-dom";

export default function Navigation() {
  const navigate = useNavigate();
  const location = useLocation();

  const navItems = [
    {
      id: "measure-iop",
      label: "Measure\nIOP",
      icon: (isActive: boolean) => (
        <svg className="w-6 h-6" viewBox="0 0 24 24" fill="none">
          <path
            d="M12 5C6.556 5 3.531 9.234 2.456 11.116C2.235 11.502 2.125 11.696 2.136 11.984C2.149 12.272 2.279 12.46 2.538 12.836C3.818 14.694 7.294 19 12 19C16.706 19 20.182 14.694 21.462 12.836C21.722 12.46 21.852 12.272 21.863 11.984C21.874 11.696 21.765 11.502 21.544 11.116C20.47 9.234 17.444 5 12 5Z"
            stroke={isActive ? "#F5F8FA" : "#000"}
          />
          <path
            d="M12 15C13.6569 15 15 13.6569 15 12C15 10.3431 13.6569 9 12 9C10.3431 9 9 10.3431 9 12C9 13.6569 10.3431 15 12 15Z"
            stroke={isActive ? "#F5F8FA" : "#000"}
          />
        </svg>
      ),
      path: "/measure-iop",
    },
    {
      id: "view-patients",
      label: "View\nPatient",
      icon: (isActive: boolean) => (
        <svg className="w-7 h-7" viewBox="0 0 29 29" fill="none">
          <path
            d="M19.1762 16.4527C18.4287 16.4527 17.7915 16.1909 17.2646 15.6672C16.7378 15.1436 16.4744 14.5085 16.4744 13.7617C16.4744 13.015 16.7362 12.3782 17.2598 11.8513C17.7834 11.3245 18.4186 11.0611 19.1653 11.0611C19.9121 11.0611 20.5489 11.3229 21.0757 11.8465C21.6026 12.3701 21.866 13.0049 21.866 13.7508C21.866 14.4968 21.6042 15.134 21.0806 15.6624C20.5569 16.1909 19.9222 16.4543 19.1762 16.4527ZM13.8257 22.7723C13.5494 22.7723 13.3178 22.6788 13.1309 22.4919C12.944 22.305 12.8506 22.0734 12.8506 21.7971V21.4056C12.8506 21.143 12.9162 20.8925 13.0476 20.654C13.1789 20.4156 13.3561 20.2247 13.5792 20.0813C14.4242 19.5996 15.3104 19.2306 16.2376 18.9745C17.1639 18.7175 18.1419 18.589 19.1714 18.589C20.1993 18.589 21.1768 18.7175 22.104 18.9745C23.0312 19.2306 23.9173 19.5996 24.7623 20.0813C24.9847 20.2255 25.1619 20.4164 25.294 20.654C25.4261 20.8917 25.4918 21.1422 25.491 21.4056V21.7959C25.491 22.073 25.3975 22.305 25.2106 22.4919C25.0237 22.6788 24.7917 22.7723 24.5146 22.7723H13.8257ZM14.1 21.193V21.5639H24.2416V21.193C23.4441 20.7435 22.6176 20.3987 21.7621 20.1586C20.9066 19.9186 20.043 19.7985 19.1714 19.7985C18.299 19.7985 17.435 19.9186 16.5795 20.1586C15.7248 20.3987 14.8983 20.7435 14.1 21.193ZM19.1714 15.2443C19.575 15.2443 19.9238 15.0973 20.2178 14.8033C20.5118 14.5093 20.6584 14.1605 20.6576 13.7569C20.6568 13.3533 20.5102 13.0041 20.2178 12.7092C19.9254 12.4144 19.5766 12.2678 19.1714 12.2694C18.7662 12.271 18.417 12.4176 18.1238 12.7092C17.8305 13.0009 17.6839 13.3501 17.6839 13.7569C17.6839 14.1637 17.8305 14.5125 18.1238 14.8033C18.417 15.0941 18.7662 15.2411 19.1714 15.2443ZM12.5485 16.3125H5.29851C5.12693 16.3125 4.98314 16.2545 4.86714 16.1385C4.75114 16.0225 4.69354 15.8787 4.69434 15.7071C4.69515 15.5355 4.75275 15.3922 4.86714 15.277C4.98152 15.1618 5.12532 15.1042 5.29851 15.1042H12.5485C12.7193 15.1042 12.8627 15.1622 12.9787 15.2782C13.0947 15.3942 13.1527 15.538 13.1527 15.7095C13.1527 15.8811 13.0947 16.0245 12.9787 16.1397C12.8627 16.2549 12.7193 16.3125 12.5485 16.3125ZM17.3818 6.64583H5.29851C5.12693 6.64583 4.98314 6.58783 4.86714 6.47183C4.75114 6.35583 4.69354 6.21204 4.69434 6.04046C4.69515 5.86888 4.75275 5.72549 4.86714 5.61029C4.98152 5.4951 5.12532 5.4375 5.29851 5.4375H17.3818C17.5526 5.4375 17.696 5.4955 17.812 5.6115C17.928 5.7275 17.986 5.87129 17.986 6.04287C17.986 6.21446 17.928 6.35785 17.812 6.47304C17.696 6.58824 17.5526 6.64583 17.3818 6.64583ZM14.1326 11.4792H5.29851C5.12693 11.4792 4.98314 11.4212 4.86714 11.3052C4.75114 11.1892 4.69354 11.0454 4.69434 10.8738C4.69515 10.7022 4.75275 10.5588 4.86714 10.4436C4.98152 10.3284 5.12532 10.2708 5.29851 10.2708H14.825C14.6824 10.4585 14.5527 10.649 14.4359 10.8424C14.3191 11.0357 14.2172 11.248 14.1326 11.4792Z"
            fill={isActive ? "#FFF" : "#000"}
            fillOpacity={isActive ? 1 : 0.69}
          />
        </svg>
      ),
      path: "/view-patients",
    },
    {
      id: "add-patient",
      label: "Add\nPatient",
      icon: (isActive: boolean) => (
        <svg className="w-6 h-6" viewBox="0 0 24 24" fill="none">
          <path
            d="M12 12C14.2091 12 16 10.2091 16 8C16 5.79086 14.2091 4 12 4C9.79086 4 8 5.79086 8 8C8 10.2091 9.79086 12 12 12Z"
            stroke={isActive ? "#FFF" : "#000"}
            strokeLinecap="round"
          />
          <path
            fillRule="evenodd"
            clipRule="evenodd"
            d="M15.276 16C13.8641 15.559 12.3778 15.4073 10.906 15.554C9.26599 15.716 7.71499 16.24 6.44999 17.071C5.18599 17.903 4.25399 19.014 3.80199 20.279C3.7768 20.3415 3.7645 20.4084 3.76581 20.4757C3.76713 20.5431 3.78203 20.6094 3.80964 20.6709C3.83725 20.7323 3.87698 20.7876 3.92646 20.8333C3.97594 20.879 4.03415 20.9142 4.09758 20.9368C4.16101 20.9595 4.22837 20.9691 4.29561 20.9651C4.36284 20.961 4.42857 20.9435 4.48885 20.9134C4.54913 20.8833 4.60271 20.8414 4.64638 20.7901C4.69005 20.7389 4.72291 20.6793 4.74299 20.615C5.10999 19.588 5.88499 18.64 6.99999 17.907C8.11499 17.174 9.50799 16.697 11.005 16.549C11.555 16.495 12.108 16.486 12.654 16.521C13.0222 16.1858 13.5021 16.0001 14 16H15.276Z"
            fill={isActive ? "#FFF" : "#000"}
          />
          <path
            d="M18 14V22V14ZM22 18H14H22Z"
            fill={isActive ? "#FFF" : "#000"}
          />
          <path
            d="M18 14V22M22 18H14"
            stroke={isActive ? "#FFF" : "#000"}
            strokeLinecap="round"
          />
        </svg>
      ),
      path: "/add-patient",
    },
  ];

  const isActive = (path: string) => location.pathname === path;

  return (
    <div className="bg-black/15 rounded-[10px] mx-6 mt-4 overflow-hidden">
      <div className="flex">
        {navItems.map((item) => (
          <button
            key={item.id}
            onClick={() => navigate(item.path)}
            className={`flex-1 flex flex-col items-center py-3 px-2 ${
              isActive(item.path)
                ? "bg-iop-blue text-white"
                : "bg-transparent text-black"
            } ${item.id === "measure-iop" ? "rounded-l-[10px]" : ""} ${
              item.id === "add-patient" ? "rounded-r-[10px]" : ""
            }`}
          >
            <div className="mb-1">{item.icon(isActive(item.path))}</div>
            <span className="text-xs font-normal leading-tight whitespace-pre-line">
              {item.label}
            </span>
          </button>
        ))}
      </div>
    </div>
  );
}
